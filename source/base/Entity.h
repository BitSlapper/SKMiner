////////////////////////////////////////////////
// File:	Entity.h
//
// Author:	Liam Russell (A.K.A. BitSlapper)
//
// Copyright:	2014-2015 Liam Russell
//
// License:	GNU GENERAL PUBLIC LICENSE V3
//////////////////////////////////////////////

#ifndef _ENTITY_H_
#define _ENTITY_H_

class Entity
{

public:

	enum ENTITY_TYPE
	{
		NONE = 0,
		ADL_ENTITY,
		ADL_GPU,
		API_HANDLER,
		API_REQUEST,
		BASE_COMPUTE_DEVICE,
		BASE_GPU,
		CL_DEVICE,
		CL_KERNEL,
		CL_MEMORY,
		COMPUTE_DEVICE_CL,
		COMPUTE_DEVICE_CUDA,
		CONFIG_CONNECTION,
		FILE_LOADER,
		GPU_DATA,
		GPU_SETTING,
		HTTP_CONNECTION,
		HTTP_CONNECTION_MANAGER,
		HTTP_HEADER,
		HTTP_JSON_REQUEST_PARSER,
		HTTP_REPLY,
		HTTP_REQUEST,
		HTTP_REQUEST_HANDLER,
		HTTP_REQUEST_PARSER,
		HTTP_WEB_SERVER,
		JSON_FILE_LOADER,
		MINER_DATA,
		MINER_THREAD,
		RUN_OPTIONS,
		SERVER_CONNECTION,
		SK_SERVER_CONNECTION,
		SK_MINER_DATA,
		SK_MINER_THREAD,
		POOL,
		WEB_JSON_REQUEST
	};

protected:

	ENTITY_TYPE m_enmEntityType;

public:


	//////////////////////////////////////////////////////////////////////////////
	//Constructor
	///////////////////////////////////////////////////////////////////////////////
	Entity();

	///////////////////////////////////////////////////////////////////////////////
	//Copy Constructor
	///////////////////////////////////////////////////////////////////////////////
	Entity(const Entity& entity);

	///////////////////////////////////////////////////////////////////////////////
	//Assignment Operator
	///////////////////////////////////////////////////////////////////////////////
	Entity& operator=(const Entity& entity);

	///////////////////////////////////////////////////////////////////////////////
	//Destructor
	///////////////////////////////////////////////////////////////////////////////
	~Entity();


	///////////////////////////////////////////////////////////////////////////////
	//Accessors
	///////////////////////////////////////////////////////////////////////////////
	const ENTITY_TYPE& GetEntityType()	const	{ return this->m_enmEntityType; }
};

#endif //_ENTITY_H_

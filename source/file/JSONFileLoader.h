////////////////////////////////////////////////
// File:	JSONFileLoader.h
//
// Author:	Liam Russell (A.K.A. BitSlapper)
//
// Copyright: 2014-2015 Liam Russell
//
// License:	GNU GENERAL PUBLIC LICENSE V3
//////////////////////////////////////////////
#ifndef _JSONFILELOADER_H_
#define _JSONFILELOADER_H_

#include "../base/OSVersion.h"
#include "../base/Entity.h"

#include <json_spirit.h>

class JSONFileLoader : public Entity
{
private:

	///////////////////////////////////////////////////////////////////////////////
	//Copy Constructor
	///////////////////////////////////////////////////////////////////////////////
	JSONFileLoader(const JSONFileLoader& fileLoader){}

	///////////////////////////////////////////////////////////////////////////////
	//Assignment Operator
	///////////////////////////////////////////////////////////////////////////////
	JSONFileLoader& operator=(const JSONFileLoader& fileLoader) { return *this; };


public:

	///////////////////////////////////////////////////////////////////////////////
	//Constructor
	///////////////////////////////////////////////////////////////////////////////
	JSONFileLoader();

	///////////////////////////////////////////////////////////////////////////////
	//Destructor
	///////////////////////////////////////////////////////////////////////////////
	~JSONFileLoader();

	bool Save(const std::string& szFileName, json_spirit::mObject tData, const std::string& szSubDirectory = "", bool bOverwrite = true, bool bIsBinary = false);
	bool Load(const std::string& szFileName, json_spirit::mObject& tData, const std::string& szSubDirectory = "", bool bIsBinary = false);

};

#endif //_JSONFILELOADER_H_
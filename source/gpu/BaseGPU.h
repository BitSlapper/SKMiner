////////////////////////////////////////////////
// File:	BaseGPU.h
//
// Author:	Liam Russell (A.K.A. BitSlapper)
//
// Copyright: 2014-2015 Liam Russell
//
// License:	GNU GENERAL PUBLIC LICENSE V3
//////////////////////////////////////////////


#ifndef _BASEGPU_H_
#define _BASEGPU_H_

#include <string>
#include "../base/IPrototype.h"
#include "../base/Entity.h"

class GPUSetting;

class BaseGPU : public IPrototype, public Entity
{

protected:

	bool					m_bIsManaged;	
	int						m_nGPUID;
	BaseGPU*				m_pTwin;

public:

	///////////////////////////////////////////////////////////////////////////////
	//Constructor
	///////////////////////////////////////////////////////////////////////////////
	BaseGPU();

	///////////////////////////////////////////////////////////////////////////////
	//Copy Constructor
	///////////////////////////////////////////////////////////////////////////////
	BaseGPU(const BaseGPU& baseGPU);

	///////////////////////////////////////////////////////////////////////////////
	//Assignment Operator
	///////////////////////////////////////////////////////////////////////////////
	BaseGPU& operator=(const BaseGPU& baseGPU);

	///////////////////////////////////////////////////////////////////////////////
	//Destructor
	///////////////////////////////////////////////////////////////////////////////
	virtual ~BaseGPU() {};

	BaseGPU* Clone();
	BaseGPU* DeepCopy();

	///////////////////////////////////////////////////////////////////////////////
	//Accessors
	///////////////////////////////////////////////////////////////////////////////
	const bool						GetIsManaged()				const										{	return this->m_bIsManaged;							}
	const int						GetGPUID()					const										{	return this->m_nGPUID;								}
	BaseGPU*						GetTwin()					const										{	return this->m_pTwin;								}

	///////////////////////////////////////////////////////////////////////////////
	//Mutators
	///////////////////////////////////////////////////////////////////////////////
	
	void							SetIsManaged(const bool bIsManaged)										{	this->m_bIsManaged = bIsManaged;					} 
	void							SetGPUID(const int nGPUID)												{	this->m_nGPUID = nGPUID;							}
	void							SetTwin(BaseGPU* pTwin)													{	this->m_pTwin = pTwin;								}

};


#endif //_BASEGPU_H_
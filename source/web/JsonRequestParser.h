////////////////////////////////////////////////
// File:	JsonRequestParser.h
//
// Author:	Liam Russell (A.K.A. BitSlapper)
//
//			Based off of the boost http server example
//			http://www.boost.org/doc/libs/1_55_0/doc/html/boost_asio/examples/cpp11_examples.html
//
// Copyright:	2014-2015 Liam Russell
//
// License:	GNU GENERAL PUBLIC LICENSE V3
//////////////////////////////////////////////

#ifndef _JSONREQUESTPARSER_H_
#define _JSONREQUESTPARSER_H_

#include "../base/Entity.h"
#include "RequestParser.h"

namespace Http
{
	namespace Server
	{
		class Request;

		class JsonRequestParser : public Entity
		{

		private:

			enum State
			{
				JSON_START,
				JSON_INTERMEDIATE
			};

			State m_eState;
			int m_nStartChars;
			int m_nEndChars;

			RequestParser::ResultType Consume(Request* pRequest, char chInput);

		public:

			//////////////////////////////////////////////////////////////////////////////
			//Constructor
			///////////////////////////////////////////////////////////////////////////////
			JsonRequestParser();

			///////////////////////////////////////////////////////////////////////////////
			//Copy Constructor
			///////////////////////////////////////////////////////////////////////////////
			JsonRequestParser(const JsonRequestParser& requestParser);

			///////////////////////////////////////////////////////////////////////////////
			//Assignment Operator
			///////////////////////////////////////////////////////////////////////////////
			JsonRequestParser& operator=(const JsonRequestParser& requestParser);

			///////////////////////////////////////////////////////////////////////////////
			//Destructor
			///////////////////////////////////////////////////////////////////////////////
			~JsonRequestParser();


			void Reset();

			RequestParser::ResultType Parse(Request* pRequest, char* itBegin, char* itEnd);

			///////////////////////////////////////////////////////////////////////////////
			//Accessors
			///////////////////////////////////////////////////////////////////////////////
			const State& GetState() const { return this->m_eState; }

		};
	}
}


#endif //_JSONREQUESTPARSER_H_